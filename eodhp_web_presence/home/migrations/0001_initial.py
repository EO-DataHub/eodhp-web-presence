# Generated by Django 5.0.9 on 2025-02-10 09:47

import django.db.models.deletion
import wagtail.blocks
import wagtail.fields
import wagtail.images.blocks
import wagtailcache.cache
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("wagtailcore", "0089_log_entry_data_json_null_to_object"),
        ("wagtailimages", "0025_alter_image_file_alter_rendition_file"),
    ]

    operations = [
        migrations.CreateModel(
            name="AboutIndexPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                ("intro", wagtail.fields.RichTextField(blank=True)),
            ],
            options={
                "abstract": False,
            },
            bases=(wagtailcache.cache.WagtailCacheMixin, "wagtailcore.page"),
        ),
        migrations.CreateModel(
            name="CaseStudiesPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                ("intro", wagtail.fields.RichTextField(blank=True)),
            ],
            options={
                "abstract": False,
            },
            bases=(wagtailcache.cache.WagtailCacheMixin, "wagtailcore.page"),
        ),
        migrations.CreateModel(
            name="DataIndexPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                ("intro", wagtail.fields.RichTextField(blank=True)),
            ],
            options={
                "abstract": False,
            },
            bases=(wagtailcache.cache.WagtailCacheMixin, "wagtailcore.page"),
        ),
        migrations.CreateModel(
            name="DocsIndexPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                ("intro", wagtail.fields.RichTextField(blank=True)),
            ],
            options={
                "abstract": False,
            },
            bases=(wagtailcache.cache.WagtailCacheMixin, "wagtailcore.page"),
        ),
        migrations.CreateModel(
            name="DocumentationPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                ("intro", wagtail.fields.RichTextField(blank=True)),
                (
                    "topics",
                    wagtail.fields.StreamField(
                        [
                            (
                                "documentation_panel",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(
                                                help_text="Title of the documentation panel",
                                                required=True,
                                            ),
                                        ),
                                        (
                                            "slug",
                                            wagtail.blocks.CharBlock(
                                                help_text="Unique identifier in the url e.g. workflow",
                                                max_length=50,
                                                required=True,
                                            ),
                                        ),
                                        (
                                            "description",
                                            wagtail.blocks.RichTextBlock(
                                                help_text="Description of the documentation panel",
                                                required=True,
                                            ),
                                        ),
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                help_text="Optional image for the documentation panel",
                                                required=False,
                                            ),
                                        ),
                                    ]
                                ),
                            )
                        ],
                        blank=True,
                        help_text="Add documentation panels to this page.",
                        use_json_field=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(wagtailcache.cache.WagtailCacheMixin, "wagtailcore.page"),
        ),
        migrations.CreateModel(
            name="HomePage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "overview_text",
                    wagtail.fields.RichTextField(blank=True, default="Welcome to our website!"),
                ),
                (
                    "aim_1_title",
                    models.CharField(blank=True, default="Our First Aim", max_length=255),
                ),
                (
                    "aim_1_description",
                    wagtail.fields.RichTextField(
                        blank=True, default="Description of our first aim."
                    ),
                ),
                ("aim_1_image", models.ImageField(blank=True, null=True, upload_to="aims/")),
                (
                    "aim_2_title",
                    models.CharField(blank=True, default="Our Second Aim", max_length=255),
                ),
                (
                    "aim_2_description",
                    wagtail.fields.RichTextField(
                        blank=True, default="Description of our second aim."
                    ),
                ),
                ("aim_2_image", models.ImageField(blank=True, null=True, upload_to="aims/")),
                (
                    "aim_3_title",
                    models.CharField(blank=True, default="Our Third Aim", max_length=255),
                ),
                (
                    "aim_3_description",
                    wagtail.fields.RichTextField(
                        blank=True, default="Description of our third aim."
                    ),
                ),
                ("aim_3_image", models.ImageField(blank=True, null=True, upload_to="aims/")),
                (
                    "aim_4_title",
                    models.CharField(blank=True, default="Our Fourth Aim", max_length=255),
                ),
                (
                    "aim_4_description",
                    wagtail.fields.RichTextField(
                        blank=True, default="Description of our fourth aim."
                    ),
                ),
                ("aim_4_image", models.ImageField(blank=True, null=True, upload_to="aims/")),
            ],
            options={
                "abstract": False,
            },
            bases=(wagtailcache.cache.WagtailCacheMixin, "wagtailcore.page"),
        ),
        migrations.CreateModel(
            name="GenericPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "hero_caption",
                    models.CharField(
                        blank=True,
                        help_text="Caption or alt-text for the hero image",
                        max_length=255,
                    ),
                ),
                (
                    "intro",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="A short intro paragraph that sits below the title/subtitle.",
                    ),
                ),
                (
                    "body",
                    wagtail.fields.StreamField(
                        [
                            (
                                "content_block",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "heading",
                                            wagtail.blocks.CharBlock(
                                                help_text="Optional heading", required=False
                                            ),
                                        ),
                                        ("paragraph", wagtail.blocks.RichTextBlock(required=False)),
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(required=False),
                                        ),
                                    ]
                                ),
                            ),
                            ("blockquote", wagtail.blocks.BlockQuoteBlock()),
                            ("raw_html", wagtail.blocks.RawHTMLBlock()),
                        ],
                        blank=True,
                        use_json_field=True,
                    ),
                ),
                (
                    "cta_text",
                    models.CharField(blank=True, help_text="Button or link text", max_length=255),
                ),
                (
                    "cta_url",
                    models.URLField(blank=True, help_text="Target URL for the call-to-action"),
                ),
                (
                    "hero_image",
                    models.ForeignKey(
                        blank=True,
                        help_text="Main hero or banner image for the top of the page.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                    ),
                ),
            ],
            options={
                "verbose_name": "Generic Page",
                "verbose_name_plural": "Generic Pages",
            },
            bases=(wagtailcache.cache.WagtailCacheMixin, "wagtailcore.page"),
        ),
    ]
