name: Publish Docker image to AWS ECR

on:
  push:
    tags:
      - '*.*.*.*'
    branches:
      - main


env:
  IMAGE_NAME: hc-test
  IMAGE_TAG: latest

jobs:
  docker:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v3

#      - uses: psf/black@stable
#        with:
#          options: "--line-length 100 --check --verbose"
#      - uses: chartboost/ruff-action@v1
#      - run: pip install isort
#      - run: isort . --check --diff
#
#      - name: Security check - Bandit
#        uses: mdegis/bandit-action@v1.0.1
#        with:
#          path: "."
#          level: high
#          confidence: high
#          exit_zero: true
#          skips: B101
#      - name: Security check - Trivy
#        uses: aquasecurity/trivy-action@master
#        with:
#          scan-type: 'fs'
#          ignore-unfixed: true
#          vuln-type: 'os,library'
#          severity: 'CRITICAL,HIGH'



      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-container-registry
          aws-region: ${{ secrets.AWS_REGION }}

#      - name: Get image tag
#        id: tag
##        if: github.ref_type == 'tag'
#        run: |
#          echo "${GITHUB_REF##refs/tags/*}"
#          echo "${GITHUB_REF}"
#          echo "IMAGE_TAG=$(if [[ "${GITHUB_REF##refs/tags/*}" == v* ]]; then echo ${GITHUB_REF##refs/tags/*}; else echo "latest"; fi)" >> $GITHUB_ENV
###        run: echo "IMAGE_TAG=$(if [ -z "${GITHUB_REF##refs/tags/*}" ]; then echo "latest"; else echo ${GITHUB_REF##refs/tags/*}; fi)" >> $GITHUB_ENV


      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registries: ${{ inputs.AWS_ACCOUNT_ID }}
          mask-password: "true" # see: https://github.com/aws-actions/amazon-ecr-login#docker-credentials
#
      - name: Build, tag, and push image to Amazon ECR
        id: build-publish
        shell: bash
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR }}
          docker build -t $IMAGE_NAME .
          docker tag $IMAGE_NAME:$IMAGE_TAG ${{ secrets.AWS_ECR }}/$IMAGE_NAME:$IMAGE_TAG
          docker push ${{ secrets.AWS_ECR }}/$IMAGE_NAME:$IMAGE_TAG
